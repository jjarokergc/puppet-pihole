# Pi-hole Module-level defaults
---
# Data Merging Options
# (Over-ride these defaults by using an environment-specific data file)
lookup_options:
  pihole::install:      # Git cloning
    merge:
      strategy: deep
      merge_hash_arrays: true
  pihole::setup:        # setupVar.conf parameters
    merge:
      strategy: deep
      merge_hash_arrays: true
  pihole::ftldns:       # pihole-FTL.conf parameters
    merge:
      strategy: deep
      merge_hash_arrays: true
  pihole::list:         # Pihole defined lists
    merge:
      strategy: deep
      merge_hash_arrays: true
  pihole::custom_list:  # DNS entries to add to custom.list
    merge:
      strategy: deep
      merge_hash_arrays: true
  pihole::dnsmasq:      # Config directives for dnsmasq
    merge:
      strategy: deep
      merge_hash_arrays: true

# Clone pihole installation script from git
pihole::install:
  repo: 'https://github.com/pi-hole/pi-hole.git'
  revision: 'v5.17.1'  # Version of script to install; not final pihole version
  path: 
    download: '/tmp/pihole'
    config: '/etc/pihole'

# Parameters in setupVar.conf used in unattended installation and enforced afterwards.
# - Any changes from the admin page to the list below will be overwritten on the next puppet run.
# - Admin-page changes to variables not on this list are managed by pihole
pihole::setup: 
  # WEBPASSWORD: #'<hash of password>'
  PIHOLE_INTERFACE: "%{networking.primary}" # primary listening interface
  DNSMASQ_LISTENING: 'all' # Allow queries from non-local networks (such as VPNs)
  # PIHOLE_DNS_1: '192.168.1.1'       # Router is used for upstream, allowing local DNS
  # PIHOLE_DNS_2: '8.8.4.4'
  # PIHOLE_DNS_3: '208.67.222.222'  # OpenDNS
  # PIHOLE_DNS_4: '208.67.220.220'
  # PIHOLE_DNS_5: '4.2.2.1'         # Level3
  # PIHOLE_DNS_6: '4.2.2.2'
  # REV_SERVER: 'true'       # Convert IPs to hostnames by checking with router
  # REV_SERVER_CIDR: '192.168.0.0/16'
  # REV_SERVER_TARGET: '192.168.1.1'
  # REV_SERVER_DOMAIN: ''

pihole::ftldns: # parameters in pihole-FTL.conf used in the GUI
  BLOCKINGMODE: 'NULL' #NULL|IP-NODATA-AAAA|IP|NXDOMAINÂ¶
  PRIVACYLEVEL: '0' # Show everything
  PIHOLE_PTR: 'HOSTNAMEFQDN' # Host's global hostname

# Pi-hole Lists
# Keys should match the pihole defined lists
# Values are an array of urls to add to the list
# The defined-list keys must have at least one array-element url
pihole::list:
  # white-wild: # Wildcard whitelist for domain and subdomains
  #   - example.com
  # whitelist: # Whitelist domains (no regex)
  #   - atleastone.example.com
  # blacklist:
  #   - atleastone.example.com
  # white-regex:
  #   - atleastone.example.com
  black-regex:
      # Non IPv6 network; block AAAA.  
      # See https://discourse.pi-hole.net/t/option-to-block-not-forward-all-aaaa-queries/34837/36
    # - '.*;querytype=AAAA'   
  # black-wild:
  #   - atleastone.example.com

# PiHole Local DNS
# See pihole::collection for examples
# If puppetdb is installed, then this resource can be exported by nodes.
# This is useful in homelab environments.
pihole::custom_list:  # DNS entries to add to custom.list
#  example.localdomain: 192.168.1.200

pihole::dnsmasq: # Add custom config to dnsmasq such as for local dns forwarding
  # - path: '/etc/dnsmasq.d'
  #   files:
  #     - name: '02-localdns.conf'
  #       comment: 'Local DNS Forwarding'
  #       directives:
  #         - entry: 'server=/staging/10.10.20.101'
  #           match: 'staging'  # Unique term to match
  #           comment: 'Selective dns forwarding for local domain staging'